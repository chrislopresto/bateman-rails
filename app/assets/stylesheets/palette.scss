/* Coolors Exported Palette - coolors.co/42cafd-66b3ba-8eb19d-f6efa6-f0d2d1 */

$color1: #42cafd; //rgba(66, 202, 253, 100)
$color2: #66b3ba; //rgba(102, 179, 186, 100)
$color3: #8eb19d; //rgba(142, 177, 157, 100)
$color4: #f6efa6; //rgba(246, 239, 166, 100)
$color5: #f0d2d1; //rgba(240, 210, 209, 100)
$color6: #f5edf0; //rgba(245, 237, 240, 100)
$color7: #292f36; //rgba(41, 47, 54, 100)

$palette: (
  'blue': $color1,
  'teal': $color2,
  'green': $color3,
  'yellow': $color4,
  'pink': $color5,
  'white': $color6,
  'black': $color7
);

@function palette($color) {
  @return map-get($palette, $color);
}

// The palette-rule mixin adds the specified rule for each specified color
//
// $rule -- CSS rule, e.g. background-color, fill -- Defaults to color.
// $colors -- list of palette colors, e.g. (violet, magenta, teal) -- Defaults to entire palette
@mixin palette-rule($rule: color, $colors: map-keys($palette)) {
  @each $color in $colors {
    $value: map-get($palette, $color);
    &.#{$color} {
      #{$rule}: $value;
    }
  }
}
